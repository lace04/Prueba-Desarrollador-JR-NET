@page "/libros"

@using GestionBiblioteca.Shared;
@using CurrieTechnologies.Razor.SweetAlert2;
@using GestionBiblioteca.Client.Services;

@inject SweetAlertService Swal;
@inject ILibroService libroService;

<h3>Libros</h3>
<a class="btn btn-success btn-sm mb-3" href="libro">Nuevo Libro</a>
<a class="btn btn-success btn-sm mb-3" href="autor">Nuevo Autor</a>

@* Tabla de Libros *@

<table class="table">
  <thead>
    <tr>
      <th>Título </th>
      <th>Autor </th>
      <th></th>
    </tr>
  </thead>
  <tbody>
    @if (listaLibro != null)
    {
      foreach (var libro in listaLibro)
      {
        <tr>
          <td>@libro.Titulo</td>
          <td>@libro.Autor!.Nombre</td>
          <td>
            <a class="btn btn-primary btn-sm" href="libro/@libro.LibroId">
              <i class="oi oi-pencil"></i>
            </a>
            <button type="button" class="btn btn-secondary btn-sm ms-2" @onclick="(() => Eliminar(libro.LibroId))">
              <i class="oi oi-trash"></i>
            </button>
          </td>
        </tr>
      }
    }
    else
    {
      <tr>
        <td colspan="5" align="center">
          <img style="width:50px" src="https://www.superiorlawncareusa.com/wp-content/uploads/2020/05/loading-gif-png-5.gif" />
        </td>
      </tr>
    }
  </tbody>
</table>

@code {
  List<LibroDTO>? listaLibro = null;

  protected override async Task OnInitializedAsync()
  {
    listaLibro = await libroService.Lista();
  }

  private async Task Eliminar(int id)
  {
    var resultado = await Swal.FireAsync(new SweetAlertOptions
      {
        Title = "¿Está seguro?",
        Text = "¡No podrá recuperar el registro una vez eliminado!",
        Icon = SweetAlertIcon.Warning,
        ShowCancelButton = true,
        ConfirmButtonText = "¡Sí, eliminar!",
        CancelButtonText = "¡No, cancelar!"
      });

    if (resultado.IsConfirmed)
    {
      var eliminado = await libroService.Eliminar(id);

      if (eliminado)
      {
        await Swal.FireAsync(
            "¡Eliminado!",
            "El registro ha sido eliminado.",
            SweetAlertIcon.Success);
        listaLibro = await libroService.Lista();
      }
      else
      {
        await Swal.FireAsync(
            "¡Error!",
            "El registro no ha sido eliminado.",
            SweetAlertIcon.Error);
      }
    }
  }
}